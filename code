#include <iostream>
#include <fstream>
#include <sstream>
#include "account.h"
using namespace std;

struct record{
  string date;
  string amount;
  string type;
  string account;
  record * next;
};

void login(string * name, string * password,record * rec){
  int number;
  cout<<"Enter 1 to login\nEnter 2 to create new account\n;
  cin>>number;
  while (number!=1 && number!=2){
    cout<<"Invalid input! Please enter again!"<<endl;
    cin>>number;
    }
  if (number==1){
    cout<<"Please enter your user name!";
    cin>>name;
    check_password=getdata(name,rec);                                  //file input
    cout<<"Please enter your password!";
    cin>>password;
    while (check_password!=password){
      cout<<"Wrong password! Please enter your password again!"<<endl;
      cin>>password;
      }
    }
  if (number==2){
    cout<<"Please enter your user name!";
    cin>>name;                                                //open new file here???
    cout<<"Please enter your password!";
    cin>>password;
    }
  }
  
string getdata(string name,record *& rec){
  record * tail;
  string password,str;
  ifstream fin;
  fin.open(name.c_str());
  fin>>password;
  int counter=0;
  while (getline(fin,str)){
    istringstream iss(str);
    record * p = new record;
    iss>>p->date>>p->amount>>p->type>>p->account;
    p->next=NULL;
    if (rec==NULL){
      rec=p;
      tail=p;
      }
    else{
      tail->next=p;
      tail=p;
      }
  }

void printmenu(){

int main(){
  record * rec = NULL;                                //dynamic memory management
  string name=" ",password=" ";
  login(name,password,rec);
  
  printmenu();
  int choice;
  
  cin>>choice;
  while (choice!="END"){
  cin>>choice;
  switch (choice){
  case 1:
    add();                              //exchange rate file input
    break;
  case 2:
    delete();
    break;
  case 3:
    edit();
    break;
  case 4:
    view();
    break;
  case 5:
    report();
    break;
  case 6:
    budget();
    break;
  case 7:
    forecast();
    break;
  default:
    cout<<"invalid input! Please input again!"<<endl;
    }
  }
  savedata();                           //file output
  delete();                             //avoid memory leakage
  return 0;
  }
